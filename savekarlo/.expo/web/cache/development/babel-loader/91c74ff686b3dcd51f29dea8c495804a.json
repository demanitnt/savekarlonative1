{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction FetchCommitteeJunction(member_id) {\n  var junctions, committees;\n  return _regeneratorRuntime.async(function FetchCommitteeJunction$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(db.collection(\"committees\").where(\"belongsTo\", \"==\", member_id).get());\n\n        case 2:\n          junctions = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(Promise.all(junctions.docs.filter(function (doc) {\n            return doc.exists;\n          }).map(function (doc) {\n            return db.doc(\"committees/\" + doc.data().com_id).get();\n          })));\n\n        case 5:\n          committees = _context.sent;\n          console.log(\"the comm juncitio\", committees);\n          return _context.abrupt(\"return\", committees.filter(function (doc) {\n            return doc.exists;\n          }).map(function (doc) {\n            return _objectSpread({\n              id: doc.id\n            }, doc.data());\n          }));\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["E:/savekarlonative/savekarlo/many2many/FetchCommitteeJunction.js"],"names":["FetchCommitteeJunction","member_id","db","collection","where","get","junctions","Promise","all","docs","filter","doc","exists","map","data","com_id","committees","console","log","id"],"mappings":";;;;;;;;AAAA,SAAeA,sBAAf,CAAsCC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAC4BC,EAAE,CACvBC,UADqB,eAErBC,KAFqB,CAEf,WAFe,EAEF,IAFE,EAEIH,SAFJ,EAGrBI,GAHqB,EAD5B;;AAAA;AACUC,UAAAA,SADV;AAAA;AAAA,2CAM6BC,OAAO,CAACC,GAAR,CACvBF,SAAS,CAACG,IAAV,CACGC,MADH,CACU,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAACC,MAAR;AAAA,WADb,EAEGC,GAFH,CAEO,UAAAF,GAAG;AAAA,mBAAIT,EAAE,CAACS,GAAH,iBAAqBA,GAAG,CAACG,IAAJ,GAAWC,MAAhC,EAA0CV,GAA1C,EAAJ;AAAA,WAFV,CADuB,CAN7B;;AAAA;AAMUW,UAAAA,UANV;AAWGC,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCF,UAAhC;AAXH,2CAYWA,UAAU,CAACN,MAAX,CAAkB,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAACC,MAAR;AAAA,WAArB,EAAqCC,GAArC,CAAyC,UAAAF,GAAG;AAAA;AAAOQ,cAAAA,EAAE,EAAER,GAAG,CAACQ;AAAf,eAAsBR,GAAG,CAACG,IAAJ,EAAtB;AAAA,WAA5C,CAZX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["async function FetchCommitteeJunction(member_id) {\r\n    const junctions = await db\r\n      .collection(`committees`)\r\n      .where(\"belongsTo\", \"==\", member_id)\r\n      .get();\r\n  \r\n    const committees = await Promise.all(\r\n      junctions.docs\r\n        .filter(doc => doc.exists)\r\n        .map(doc => db.doc(`committees/${doc.data().com_id}`).get())\r\n    );\r\n   console.log(\"the comm juncitio\",committees)\r\n    return committees.filter(doc => doc.exists).map(doc => ({ id: doc.id, ...doc.data() }));\r\n  }"]},"metadata":{},"sourceType":"script"}