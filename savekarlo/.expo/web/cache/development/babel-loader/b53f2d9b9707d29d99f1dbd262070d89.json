{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"E:\\\\savekarlonative\\\\savekarlo\\\\LoginRegister\\\\RegisterScreen.js\";\n\nimport React, { useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useForm, Controller } from 'react-hook-form';\nimport { TextInput, Button } from 'react-native-paper';\nimport { auth } from \"../firebase\";\n\nvar RegisterScreen = function RegisterScreen(navigation) {\n  var _useForm = useForm(),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.formState.errors,\n      watch = _useForm.watch,\n      register = _useForm.register;\n\n  var password = useRef({});\n  password.current = watch('password', '');\n\n  var onSubmit = function onSubmit(formData) {\n    var email = formData.email,\n        password = formData.password;\n    auth.createUserWithEmailAndPassword(email.trim().toLowerCase(), password).then(function (user) {\n      console.log(user);\n    });\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, React.createElement(Controller, {\n    control: control,\n    render: function render(_ref) {\n      var _ref$field = _ref.field,\n          onChange = _ref$field.onChange,\n          onBlur = _ref$field.onBlur,\n          value = _ref$field.value;\n      return React.createElement(TextInput, {\n        label: \"Email\",\n        mode: \"outlined\",\n        onBlur: onBlur,\n        onChangeText: onChange,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      });\n    },\n    name: \"email\",\n    rules: {\n      required: true\n    },\n    defaultValue: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, errors.email && React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 34\n    }\n  }, \" You must enter email\")), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref2) {\n      var _ref2$field = _ref2.field,\n          onChange = _ref2$field.onChange,\n          onBlur = _ref2$field.onBlur,\n          value = _ref2$field.value;\n      return React.createElement(TextInput, {\n        label: \"Password\",\n        mode: \"outlined\",\n        secureTextEntry: true,\n        onBlur: onBlur,\n        onChangeText: onChange,\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      });\n    },\n    name: \"password\",\n    rules: {\n      required: true\n    },\n    defaultValue: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, errors.password && React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  }, \" Enter password\")), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref3) {\n      var _ref3$field = _ref3.field,\n          onChange = _ref3$field.onChange,\n          onBlur = _ref3$field.onBlur,\n          value = _ref3$field.value;\n      return React.createElement(TextInput, {\n        label: \"Confirm password\",\n        mode: \"outlined\",\n        secureTextEntry: true,\n        onBlur: onBlur,\n        onChangeText: onChange,\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 5\n        }\n      });\n    },\n    name: \"passwordConf\",\n    rules: {\n      required: true,\n      validate: function validate(value) {\n        return value === password.current || 'The passwords does not match';\n      }\n    },\n    defaultValue: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, errors.passwordConf && React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, errors.passwordConf.message)), React.createElement(Button, {\n    mode: \"contained\",\n    compact: false,\n    onPress: handleSubmit(onSubmit),\n    icon: \"account-plus\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 1\n    }\n  }, \"Register Account\"), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 1\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 1\n    }\n  }, \" Do you already have an account?\")), React.createElement(Button, {\n    mode: \"outlined\",\n    icon: \"account-arrow-right\",\n    compact: true,\n    onPress: function onPress() {\n      return navigation.goBack;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 1\n    }\n  }, \"SignIn\"));\n};\n\nexport default RegisterScreen;","map":{"version":3,"sources":["E:/savekarlonative/savekarlo/LoginRegister/RegisterScreen.js"],"names":["React","useRef","useForm","Controller","TextInput","Button","auth","RegisterScreen","navigation","control","handleSubmit","errors","formState","watch","register","password","current","onSubmit","formData","email","createUserWithEmailAndPassword","trim","toLowerCase","then","user","console","log","field","onChange","onBlur","value","required","validate","passwordConf","message","goBack"],"mappings":"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","sourcesContent":["import React, {useRef} from 'react'\r\nimport { View, Text } from 'react-native'\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport { TextInput, Button  } from 'react-native-paper'\r\nimport {auth} from '../firebase'\r\n\r\nconst RegisterScreen = (navigation)=>{\r\n    const {\r\n        control, \r\n        handleSubmit,\r\n        formState:{errors}, \r\n        watch,\r\n        register \r\n    }= useForm();\r\n\r\n    const password = useRef({});\r\n    password.current = watch('password', '');\r\n\r\n    const onSubmit =(formData)=>\r\n    {\r\n        const {email, password}=formData;\r\n        auth.createUserWithEmailAndPassword(\r\n            email.trim().toLowerCase(), password\r\n        ).then((user)=>{\r\n            console.log(user);\r\n        })\r\n    }\r\n    return(\r\n\r\n        <View>\r\n            <Controller\r\n            control = {control}\r\n            render ={({ field:{ onChange, onBlur, value}})=>\r\n            (\r\n                <TextInput \r\n                label=\"Email\"\r\n                mode=\"outlined\"\r\n                onBlur={onBlur}\r\n                onChangeText={onChange}\r\n                />\r\n            )}\r\n\r\n            name=\"email\"\r\n            rules={{ required: true}}\r\n            defaultValue=\"\"        \r\n\r\n            />\r\n            <View >\r\n                {errors.email && <Text> You must enter email</Text>}\r\n            </View>\r\n\r\n            < Controller\r\n            control = {control}\r\n            render={({field:{ onChange , onBlur, value}})=>\r\n        (\r\n            <TextInput\r\n            label = \"Password\"\r\n            mode= \"outlined\"\r\n            secureTextEntry\r\n            onBlur= {onBlur}\r\n            onChangeText= {onChange}\r\n            value={value}\r\n            />\r\n          \r\n        )\r\n        }\r\n        name=\"password\"\r\n        rules={{ required: true}}\r\n        defaultValue=\"\"\r\n        />\r\n        <View>\r\n            {errors.password && <Text> Enter password</Text>}\r\n        </View>\r\n\r\n        <Controller\r\n        control = {control}\r\n        render={({ field:{ onChange, onBlur, value}})=>\r\n    (\r\n    <TextInput\r\n    label=\"Confirm password\"\r\n    mode=\"outlined\"\r\n    secureTextEntry\r\n    onBlur={onBlur}\r\n    onChangeText={onChange}\r\n    value={value}\r\n    />\r\n    )}\r\n    name=\"passwordConf\"\r\n    rules={{ required: true, \r\n        validate: (value)=> value === \r\n    password.current || 'The passwords does not match',}}\r\n    defaultValue=\"\"\r\n    /> \r\n    <View>\r\n    {errors.passwordConf && <Text>{errors.passwordConf.message}</Text>} \r\n        </View>   \r\n<Button\r\nmode=\"contained\"\r\ncompact={false}\r\nonPress={handleSubmit(onSubmit)}\r\nicon=\"account-plus\"\r\n>\r\n    Register Account\r\n</Button>\r\n<View>\r\n\r\n<Text> Do you already have an account?</Text>\r\n\r\n</View>\r\n<Button\r\nmode=\"outlined\"\r\nicon=\"account-arrow-right\"\r\ncompact\r\nonPress={()=>navigation.goBack}\r\n>\r\nSignIn\r\n\r\n</Button>\r\n\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n        </View>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen;"]},"metadata":{},"sourceType":"module"}