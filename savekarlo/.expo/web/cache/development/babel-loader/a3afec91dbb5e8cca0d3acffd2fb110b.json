{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\savekarlonativegit\\\\savekarlonative\\\\savekarlo\\\\CommitteeMembers\\\\CommitteeDetailbyMember\\\\ViewAllMembers.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport CheckBox from \"react-native-web/dist/exports/CheckBox\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { TextInput, Button } from \"react-native-paper\";\nimport { auth, db } from \"../../firebase\";\nimport { DataTable, FAB, List } from \"react-native-paper\";\nimport { Checkbox } from 'react-native-paper';\n\nvar ViewAllMembers = function ViewAllMembers(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var optionsPerPage = [2, 3, 4];\n  var user = auth.currentUser;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      com_member_rel = _useState2[0],\n      setCom_member_rel = _useState2[1];\n\n  var getMemberName = \"\";\n  var changeMonthVal = [];\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.formState.errors;\n\n  var _route$params = route.params,\n      comName = _route$params.comName,\n      comShare = _route$params.comShare,\n      comId = _route$params.comId;\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      page = _useState4[0],\n      setPage = _useState4[1];\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      AllMembers = _React$useState2[0],\n      setAllMembers = _React$useState2[1];\n\n  var _React$useState3 = React.useState(optionsPerPage[0]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      itemsPerPage = _React$useState4[0],\n      setItemsPerPage = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      checked = _React$useState6[0],\n      setChecked = _React$useState6[1];\n\n  var abc = [];\n  console.log(\"the nav\", route);\n  useEffect(function () {\n    var ref = db.collection(\"com_member_rel\");\n    var ref2 = db.collection(\"com_member_rel\");\n    var databymemberCommitteeid = ref.where(\"com_id\", \"==\", comId);\n    databymemberCommitteeid.onSnapshot(function (query) {\n      var objs = [];\n      query.forEach(function (doc) {\n        objs.push(_objectSpread({\n          id: doc.id\n        }, doc.data()));\n      });\n      setCom_member_rel(objs);\n    });\n    var refPicker = db.collection(\"members\");\n    refPicker.onSnapshot(function (query) {\n      var objs = [];\n      query.forEach(function (doc) {\n        objs.push(_objectSpread({\n          id: doc.id\n        }, doc.data()));\n      });\n      console.log(\"objs at add member\", objs);\n      setAllMembers(objs);\n    });\n  }, []);\n\n  var getMemberNameById = function getMemberNameById(uid) {\n    console.log(\"UID in detail\", uid, AllMembers);\n  };\n\n  var onSubmitCheckbox = function onSubmitCheckbox() {\n    var refCheckbox = db.collection(\"com_member_rel\");\n    var refCheckboxCondition = refCheckbox.where(\"com_id\", \"==\", comId, \"&&\", \"member_id\", \"==\");\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, React.createElement(DataTable.Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, React.createElement(DataTable.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"Member Name\"), React.createElement(DataTable.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"Jan\"), React.createElement(DataTable.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"Feb\"), React.createElement(DataTable.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Mar\"), React.createElement(DataTable.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, \"Apr\"), React.createElement(DataTable.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, \"May\"), React.createElement(DataTable.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Jun\"), React.createElement(DataTable.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"Jul\"), React.createElement(DataTable.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Aug\"), React.createElement(DataTable.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"Sep\"), React.createElement(DataTable.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, \"Oct\"), React.createElement(DataTable.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"Nov\"), React.createElement(DataTable.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"Dec\")), com_member_rel.map(function (x) {\n    return React.createElement(DataTable, {\n      key: x.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, React.createElement(DataTable.Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }, React.createElement(DataTable.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }), React.createElement(DataTable.Cell, {\n      boolean: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }), React.createElement(DataTable.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }), React.createElement(DataTable.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }), React.createElement(DataTable.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }), React.createElement(DataTable.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }), React.createElement(DataTable.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }), React.createElement(DataTable.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }), React.createElement(DataTable.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }), React.createElement(DataTable.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }), React.createElement(DataTable.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }), React.createElement(DataTable.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }, React.createElement(CheckBox, {\n      style: styles.checkbox,\n      value: x.Nov,\n      id: \"11\",\n      onValueChange: function onValueChange() {\n        changeMonthVal[10] != x.Nov;\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 19\n      }\n    })), React.createElement(DataTable.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, React.createElement(CheckBox, {\n      style: styles.checkbox,\n      value: checked,\n      id: \"12\",\n      onValueChange: set,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 19\n      }\n    }))));\n  }), React.createElement(DataTable.Pagination, {\n    page: page,\n    numberOfPages: 3,\n    onPageChange: function onPageChange(page) {\n      return setPage(page);\n    },\n    label: \"1-2 of 6\",\n    optionsPerPage: optionsPerPage,\n    itemsPerPage: itemsPerPage,\n    setItemsPerPage: setItemsPerPage,\n    showFastPagination: true,\n    optionsLabel: \"Rows per page\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 10\n    }\n  }, \" Save Changes\")), React.createElement(FAB, {\n    style: styles.fab,\n    icon: \"plus\",\n    onPress: function onPress() {\n      return navigation.navigate(\"addmember\", {\n        comId: comId\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  checkboxContainer: {\n    flexDirection: \"row\",\n    marginBottom: 20\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'green'\n  },\n  checkbox: {\n    alignSelf: \"center\",\n    height: 22,\n    width: 22\n  },\n  label: {\n    margin: 8\n  }\n});\nexport default ViewAllMembers;","map":{"version":3,"sources":["E:/savekarlonativegit/savekarlonative/savekarlo/CommitteeMembers/CommitteeDetailbyMember/ViewAllMembers.js"],"names":["React","useRef","useState","useEffect","useForm","Controller","TextInput","Button","auth","db","DataTable","FAB","List","Checkbox","ViewAllMembers","route","navigation","optionsPerPage","user","currentUser","com_member_rel","setCom_member_rel","getMemberName","changeMonthVal","control","handleSubmit","errors","formState","params","comName","comShare","comId","page","setPage","AllMembers","setAllMembers","itemsPerPage","setItemsPerPage","checked","setChecked","abc","console","log","ref","collection","ref2","databymemberCommitteeid","where","onSnapshot","query","objs","forEach","doc","push","id","data","refPicker","getMemberNameById","uid","onSubmitCheckbox","refCheckbox","refCheckboxCondition","map","x","styles","checkbox","Nov","set","fab","navigate","StyleSheet","create","container","flex","alignItems","justifyContent","checkboxContainer","flexDirection","marginBottom","position","margin","right","bottom","backgroundColor","alignSelf","height","width","label"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;;;;;AAEA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,iBAApC;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,oBAAlC;AACA,SAASC,IAAT,EAAeC,EAAf;AAEA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAA2B;AAAA,MAAxBC,KAAwB,QAAxBA,KAAwB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAChD,MAAMC,cAAc,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAvB;AACA,MAAMC,IAAI,GAAGV,IAAI,CAACW,WAAlB;;AACA,kBAA4CjB,QAAQ,CAAC,EAAD,CAApD;AAAA;AAAA,MAAOkB,cAAP;AAAA,MAAuBC,iBAAvB;;AACA,MAAIC,aAAa,GAAG,EAApB;AACA,MAAMC,cAAc,GAAC,EAArB;;AAIA,iBAIInB,OAAO,EAJX;AAAA,MACEoB,OADF,YACEA,OADF;AAAA,MAEEC,YAFF,YAEEA,YAFF;AAAA,MAGeC,MAHf,YAGEC,SAHF,CAGeD,MAHf;;AAKA,sBAAqCX,KAAK,CAACa,MAA3C;AAAA,MAAQC,OAAR,iBAAQA,OAAR;AAAA,MAAiBC,QAAjB,iBAAiBA,QAAjB;AAAA,MAA2BC,KAA3B,iBAA2BA,KAA3B;;AACA,mBAAwB7B,QAAQ,CAAC,CAAD,CAAhC;AAAA;AAAA,MAAO8B,IAAP;AAAA,MAAaC,OAAb;;AACA,wBAAoCjC,KAAK,CAACE,QAAN,CAAe,EAAf,CAApC;AAAA;AAAA,MAAOgC,UAAP;AAAA,MAAmBC,aAAnB;;AACA,yBAAwCnC,KAAK,CAACE,QAAN,CAAee,cAAc,CAAC,CAAD,CAA7B,CAAxC;AAAA;AAAA,MAAOmB,YAAP;AAAA,MAAqBC,eAArB;;AACA,yBAA8BrC,KAAK,CAACE,QAAN,CAAe,KAAf,CAA9B;AAAA;AAAA,MAAOoC,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,GAAG,GAAG,EAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB3B,KAAvB;AACAZ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMwC,GAAG,GAAGlC,EAAE,CAACmC,UAAH,CAAc,gBAAd,CAAZ;AACA,QAAMC,IAAI,GAAGpC,EAAE,CAACmC,UAAH,CAAc,gBAAd,CAAb;AAEA,QAAME,uBAAuB,GAAGH,GAAG,CAACI,KAAJ,CAC9B,QAD8B,EAE9B,IAF8B,EAG9BhB,KAH8B,CAAhC;AAKAe,IAAAA,uBAAuB,CAACE,UAAxB,CAAmC,UAACC,KAAD,EAAW;AAC5C,UAAMC,IAAI,GAAG,EAAb;AACAD,MAAAA,KAAK,CAACE,OAAN,CAAc,UAACC,GAAD,EAAS;AACrBF,QAAAA,IAAI,CAACG,IAAL;AACEC,UAAAA,EAAE,EAAEF,GAAG,CAACE;AADV,WAGKF,GAAG,CAACG,IAAJ,EAHL;AAKD,OAND;AAOAlC,MAAAA,iBAAiB,CAAC6B,IAAD,CAAjB;AACD,KAVD;AAWA,QAAMM,SAAS,GAAG/C,EAAE,CAACmC,UAAH,CAAc,SAAd,CAAlB;AACAY,IAAAA,SAAS,CAACR,UAAV,CAAqB,UAACC,KAAD,EAAW;AAC9B,UAAMC,IAAI,GAAG,EAAb;AACAD,MAAAA,KAAK,CAACE,OAAN,CAAc,UAACC,GAAD,EAAS;AACrBF,QAAAA,IAAI,CAACG,IAAL;AACEC,UAAAA,EAAE,EAAEF,GAAG,CAACE;AADV,WAEKF,GAAG,CAACG,IAAJ,EAFL;AAID,OALD;AAMAd,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCQ,IAAlC;AACAf,MAAAA,aAAa,CAACe,IAAD,CAAb;AAED,KAXD;AAYD,GAjCQ,EAiCN,EAjCM,CAAT;;AAmCA,MAAMO,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,GAAD,EAAS;AAEjCjB,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BgB,GAA7B,EAAkCxB,UAAlC;AASD,GAXD;;AAaA,MAAMyB,gBAAgB,GAAC,SAAjBA,gBAAiB,GAAI;AACzB,QAAMC,WAAW,GAAGnD,EAAE,CAACmC,UAAH,CAAc,gBAAd,CAApB;AAEA,QAAMiB,oBAAoB,GAAGD,WAAW,CAACb,KAAZ,CAC3B,QAD2B,EAE3B,IAF2B,EAG3BhB,KAH2B,EAI3B,IAJ2B,EAK3B,WAL2B,EAKf,IALe,CAA7B;AAQD,GAXD;;AAaA,SACE,0CACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,SAAD,CAAW,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,EAGE,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHF,EAIE,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,EAKE,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALF,EAME,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANF,EAOE,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPF,EAQE,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WARF,EASE,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WATF,EAUE,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAVF,EAWE,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAXF,EAYE,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAZF,EAaE,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAbF,CAFF,EAiBGX,cAAc,CAAC0C,GAAf,CAAmB,UAACC,CAAD;AAAA,WAChB,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,CAAC,CAACT,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD,CAAW,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE,oBAAC,SAAD,CAAW,IAAX;AAAgB,MAAA,OAAO,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAME,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EASE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAYE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,EAeE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,EAkBE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,EAqBE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF,EAwBE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBF,EA2BE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BF,EA8BE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9BF,EAiCE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEU,MAAM,CAACC,QAAxB;AAAkC,MAAA,KAAK,EAAEF,CAAC,CAACG,GAA3C;AAAgD,MAAA,EAAE,EAAC,IAAnD;AAAwD,MAAA,aAAa,EAAE,yBAAI;AAAC3C,QAAAA,cAAc,CAAC,EAAD,CAAd,IAAoBwC,CAAC,CAACG,GAAtB;AAA0B,OAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAjCF,EAoCE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEF,MAAM,CAACC,QAAxB;AAAkC,MAAA,KAAK,EAAE3B,OAAzC;AAAqD,MAAA,EAAE,EAAC,IAAxD;AAA6D,MAAA,aAAa,EAAE6B,GAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CApCF,CADF,CADgB;AAAA,GAAnB,CAjBH,EAuEE,oBAAC,SAAD,CAAW,UAAX;AACE,IAAA,IAAI,EAAEnC,IADR;AAEE,IAAA,aAAa,EAAE,CAFjB;AAGE,IAAA,YAAY,EAAE,sBAACA,IAAD;AAAA,aAAUC,OAAO,CAACD,IAAD,CAAjB;AAAA,KAHhB;AAIE,IAAA,KAAK,EAAC,UAJR;AAKE,IAAA,cAAc,EAAEf,cALlB;AAME,IAAA,YAAY,EAAEmB,YANhB;AAOE,IAAA,eAAe,EAAEC,eAPnB;AAQE,IAAA,kBAAkB,MARpB;AASE,IAAA,YAAY,EAAE,eAThB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvEF,EAkFG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAlFH,CADF,EAsFE,oBAAC,GAAD;AACE,IAAA,KAAK,EAAE2B,MAAM,CAACI,GADhB;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMpD,UAAU,CAACqD,QAAX,CAAoB,WAApB,EAAiC;AAAEtC,QAAAA,KAAK,EAAEA;AAAT,OAAjC,CAAN;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtFF,CADF;AA8FD,CAjLD;;AAmLA,IAAMiC,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP,GADoB;AAM/BC,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,aAAa,EAAE,KADE;AAEjBC,IAAAA,YAAY,EAAE;AAFG,GANY;AAU/BV,EAAAA,GAAG,EAAE;AACHW,IAAAA,QAAQ,EAAE,UADP;AAEHC,IAAAA,MAAM,EAAE,EAFL;AAGHC,IAAAA,KAAK,EAAE,CAHJ;AAIHC,IAAAA,MAAM,EAAE,CAJL;AAKHC,IAAAA,eAAe,EAAE;AALd,GAV0B;AAiB/BlB,EAAAA,QAAQ,EAAE;AACRmB,IAAAA,SAAS,EAAE,QADH;AAERC,IAAAA,MAAM,EAAE,EAFA;AAGZC,IAAAA,KAAK,EAAE;AAHK,GAjBqB;AAsB/BC,EAAAA,KAAK,EAAE;AACLP,IAAAA,MAAM,EAAE;AADH;AAtBwB,CAAlB,CAAf;AA0BA,eAAelE,cAAf","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport { View, Text, StyleSheet,CheckBox } from \"react-native\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { TextInput, Button } from \"react-native-paper\";\r\nimport { auth, db } from \"../../firebase\";\r\n// import styles from \"../../styles\";\r\nimport { DataTable, FAB, List } from \"react-native-paper\";\r\nimport { Checkbox } from 'react-native-paper';\r\n\r\nconst ViewAllMembers = ({ route, navigation }) => {\r\n  const optionsPerPage = [2, 3, 4];\r\n  const user = auth.currentUser;\r\n  const [com_member_rel, setCom_member_rel] = useState([]);\r\n  let getMemberName = \"\";\r\n  const changeMonthVal=[];\r\n\r\n \r\n\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const { comName, comShare, comId } = route.params;\r\n  const [page, setPage] = useState(0);\r\n  const [AllMembers, setAllMembers] = React.useState([]);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState(optionsPerPage[0]);\r\n  const [checked, setChecked] = React.useState(false);\r\n  \r\n  const abc = [];\r\n  console.log(\"the nav\", route);\r\n  useEffect(() => {\r\n    const ref = db.collection(\"com_member_rel\");\r\n    const ref2 = db.collection(\"com_member_rel\");\r\n\r\n    const databymemberCommitteeid = ref.where(\r\n      \"com_id\",\r\n      \"==\",\r\n      comId\r\n    );\r\n    databymemberCommitteeid.onSnapshot((query) => {\r\n      const objs = [];\r\n      query.forEach((doc) => {\r\n        objs.push({\r\n          id: doc.id,\r\n\r\n          ...doc.data(),\r\n        });\r\n      });\r\n      setCom_member_rel(objs);\r\n    });\r\n    const refPicker = db.collection(\"members\");\r\n    refPicker.onSnapshot((query) => {\r\n      const objs = [];\r\n      query.forEach((doc) => {\r\n        objs.push({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        });\r\n      });\r\n      console.log(\"objs at add member\", objs);\r\n      setAllMembers(objs);\r\n\r\n    });\r\n  }, []);\r\n\r\n  const getMemberNameById = (uid) => {\r\n\r\n    console.log(\"UID in detail\", uid, AllMembers);\r\n \r\n  //    AllMembers.map((x) => (x.uid == uid\r\n  //     member = x.memberName\r\n  //  console.log(\"member\", member)))\r\n  //  member = JSON.parse ( member )\r\n\r\n\r\n    // return member.memberName;\r\n  }\r\n\r\n  const onSubmitCheckbox=()=>{\r\n    const refCheckbox = db.collection(\"com_member_rel\");\r\n\r\n    const refCheckboxCondition = refCheckbox.where(\r\n      \"com_id\",\r\n      \"==\",\r\n      comId,\r\n      \"&&\",\r\n      \"member_id\",\"==\",\r\n    );\r\n    \r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <View>\r\n    \r\n        <DataTable.Header>\r\n          <DataTable.Title>Member Name</DataTable.Title>\r\n          <DataTable.Title>Jan</DataTable.Title>\r\n          <DataTable.Title>Feb</DataTable.Title>\r\n          <DataTable.Title>Mar</DataTable.Title>\r\n          <DataTable.Title>Apr</DataTable.Title>\r\n          <DataTable.Title>May</DataTable.Title>\r\n          <DataTable.Title>Jun</DataTable.Title>\r\n          <DataTable.Title>Jul</DataTable.Title>\r\n          <DataTable.Title>Aug</DataTable.Title>\r\n          <DataTable.Title>Sep</DataTable.Title>\r\n          <DataTable.Title>Oct</DataTable.Title>\r\n          <DataTable.Title>Nov</DataTable.Title>\r\n          <DataTable.Title>Dec</DataTable.Title>\r\n        </DataTable.Header>\r\n        {com_member_rel.map((x) => (\r\n            <DataTable key={x.id}>\r\n              <DataTable.Row>\r\n                <DataTable.Cell>\r\n                </DataTable.Cell>\r\n                <DataTable.Cell boolean>\r\n                  {/* <CheckBox style={styles.checkbox} value={x.Jan} id=\"1\" onValueChange={()=>{changeMonthVal[0]!=x.Jan}} /> */}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell>\r\n                  {/* <CheckBox style={styles.checkbox} value={x.Feb} id=\"2\" onPress={()=>{changeMonthVal[1]!=x.Feb}}/> */}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell>\r\n                  {/* <CheckBox style={styles.checkbox} value={x.Mar} id=\"3\" onPress={()=>{changeMonthVal[2]!=x.Mar}}/> */}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell>\r\n                  {/* <CheckBox style={styles.checkbox} value={x.Apr} id=\"4\" onPress={()=>{changeMonthVal[3]!=x.Apr}}/> */}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell>\r\n                  {/* <CheckBox style={styles.checkbox} value={x.May} id=\"5\" onPress={()=>{changeMonthVal[4]!=x.May}}/> */}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell>\r\n                  {/* <CheckBox style={styles.checkbox} value={x.Jun} id=\"6\" onPress={()=>{changeMonthVal[5]!=x.Jun}}/> */}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell>\r\n                  {/* <CheckBox style={styles.checkbox} value={x.Jul} id=\"7\" onPress={()=>{changeMonthVal[6]!=x.Jul}}/> */}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell>\r\n                  {/* <CheckBox style={styles.checkbox} value={x.Aug} id=\"8\" onPress={()=>{changeMonthVal[7]!=x.Aug}}/> */}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell>\r\n                  {/* <CheckBox style={styles.checkbox} value={x.Sep} id=\"9\" onPress={()=>{changeMonthVal[8]!=x.Sep}}/> */}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell>\r\n                  {/* <CheckBox style={styles.checkbox} value={x.Oct} id=\"10\" onPress={()=>{changeMonthVal[9]!=x.Oct}}/> */}\r\n                </DataTable.Cell>\r\n                <DataTable.Cell>\r\n                  <CheckBox style={styles.checkbox} value={x.Nov} id=\"11\" onValueChange={()=>{changeMonthVal[10]!=x.Nov}}/>\r\n                </DataTable.Cell>\r\n                <DataTable.Cell>\r\n                  {/* <Text> <Checkbox style={styles.checkbox}  status={checked ? 'checked' : 'unchecked'}   id=\"12\" onPress={()=>{ setChecked(!checked)}}/></Text> */}\r\n                  <CheckBox style={styles.checkbox} value={checked }   id=\"12\" onValueChange={set }/>\r\n                 \r\n                 {/* <Text> <Checkbox\r\n      status={checked ? 'checked' : 'unchecked'}\r\n      onPress={() => {\r\n        setChecked(!checked);\r\n      }}\r\n    /></Text> */}\r\n                </DataTable.Cell>\r\n              </DataTable.Row>\r\n              \r\n            </DataTable>\r\n       \r\n        ))}\r\n        <DataTable.Pagination\r\n          page={page}\r\n          numberOfPages={3}\r\n          onPageChange={(page) => setPage(page)}\r\n          label=\"1-2 of 6\"\r\n          optionsPerPage={optionsPerPage}\r\n          itemsPerPage={itemsPerPage}\r\n          setItemsPerPage={setItemsPerPage}\r\n          showFastPagination\r\n          optionsLabel={\"Rows per page\"}\r\n        />\r\n         <Button> Save Changes</Button>\r\n         \r\n      </View>\r\n      <FAB\r\n        style={styles.fab}\r\n        icon=\"plus\"\r\n        onPress={() => navigation.navigate(\"addmember\", { comId: comId })}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  checkboxContainer: {\r\n    flexDirection: \"row\",\r\n    marginBottom: 20,\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    margin: 16,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: 'green',\r\n  },\r\n  checkbox: {\r\n    alignSelf: \"center\",\r\n    height: 22,\r\nwidth: 22,\r\n  },\r\n  label: {\r\n    margin: 8,\r\n  },\r\n});\r\nexport default ViewAllMembers;\r\n"]},"metadata":{},"sourceType":"module"}