{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"E:\\\\savekarlonative\\\\savekarlo\\\\LoginRegister\\\\LoginScreen.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useForm, Controller } from 'react-hook-form';\nimport { TextInput, Button } from 'react-native-paper';\nimport RegisterScreen from \"./RegisterScreen\";\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.formState.errors;\n\n  var onSubmit = function onSubmit(data) {\n    var email = data.email,\n        password = data.password;\n    AuthenticatorAssertionResponse.signInWithEmailAndPassword(email.trim().toLowerCase(), password);\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, React.createElement(Controller, {\n    control: control,\n    render: function render(_ref2) {\n      var _ref2$field = _ref2.field,\n          onChange = _ref2$field.onChange,\n          onBlur = _ref2$field.onBlur,\n          value = _ref2$field.value;\n      return React.createElement(TextInput, {\n        label: \"Email\",\n        mode: \"outlined\",\n        onBlur: onBlur,\n        onChangeText: onChange,\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      });\n    },\n    name: \"email\",\n    rules: {\n      required: true\n    },\n    defaultValue: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, errors.email && React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 26\n    }\n  }, \"You must fill in your email\")), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref3) {\n      var _ref3$field = _ref3.field,\n          onChange = _ref3$field.onChange,\n          onBlur = _ref3$field.onBlur,\n          value = _ref3$field.value;\n      return React.createElement(TextInput, {\n        label: \"Password\",\n        mode: \"outlined\",\n        secureTextEntry: true,\n        onBlur: onBlur,\n        onChangeText: onChange,\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      });\n    },\n    name: \"password\",\n    rules: {\n      required: true\n    },\n    defaultValue: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, errors.password && React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }, \"You must fill in your password\")), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    mode: \"contained\",\n    compact: false,\n    onPress: handleSubmit(onSubmit),\n    icon: \"account-arrow-right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Sign in\")), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 3\n    }\n  }, \"Don't have an account yet?\")), React.createElement(Button, {\n    mode: \"outlined\",\n    icon: \"account-plus\",\n    compact: true,\n    onPress: function onPress() {\n      return navigation.navigate('register');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 1\n    }\n  }, \"Register Account\"));\n};\n\nexport default LoginScreen;","map":{"version":3,"sources":["E:/savekarlonative/savekarlo/LoginRegister/LoginScreen.js"],"names":["React","useForm","Controller","TextInput","Button","RegisterScreen","LoginScreen","navigation","control","handleSubmit","errors","formState","onSubmit","data","email","password","AuthenticatorAssertionResponse","signInWithEmailAndPassword","trim","toLowerCase","field","onChange","onBlur","value","required","navigate"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { View, Text } from 'react-native';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { TextInput, Button } from 'react-native-paper'\r\nimport RegisterScreen from './RegisterScreen'\r\nconst LoginScreen = ({navigation}) => {\r\n  const { control, handleSubmit, formState: { errors } } = useForm();\r\n  const onSubmit = (data) => {\r\n\r\n    const {email, password}=data;\r\n    AuthenticatorAssertionResponse.signInWithEmailAndPassword(\r\n      email.trim().toLowerCase(),password\r\n    )\r\n\r\n  }\r\n  return (\r\n    <View>\r\n      <Controller\r\n        control={control}\r\n        render={({ field: {onChange, onBlur, value} }) => (\r\n          <TextInput\r\n            label=\"Email\"\r\n            mode=\"outlined\"\r\n            onBlur={onBlur}\r\n            onChangeText={ onChange}\r\n            value={value}\r\n          />\r\n        )}\r\n        name=\"email\"\r\n        rules={{ required: true }}\r\n        defaultValue=\"\"\r\n      />\r\n      <View>\r\n        {errors.email && <Text>You must fill in your email</Text>}\r\n      </View>\r\n      <Controller\r\n        control={control}\r\n        render={({ field:{onChange, onBlur, value }}) => (\r\n          <TextInput\r\n            label=\"Password\"\r\n            mode=\"outlined\"\r\n            secureTextEntry\r\n            onBlur={onBlur}\r\n            onChangeText={onChange}\r\n            value={value}\r\n          />\r\n        )}\r\n        name=\"password\"\r\n        rules={{ required: true }}\r\n        defaultValue=\"\"\r\n      />\r\n      <View>\r\n        {errors.password && <Text>You must fill in your password</Text>}\r\n      </View>\r\n      <View>\r\n        <Button\r\n          mode=\"contained\"\r\n          compact={false}\r\n          onPress={handleSubmit(onSubmit)}\r\n          icon=\"account-arrow-right\"\r\n        >\r\n          Sign in\r\n        </Button>\r\n      </View>\r\n\r\n      <View >\r\n  <Text>\r\n    Don't have an account yet?\r\n  </Text>\r\n</View>\r\n<Button\r\nmode=\"outlined\"\r\nicon=\"account-plus\"\r\ncompact\r\nonPress={()=> navigation.navigate('register')}>\r\n  Register Account\r\n</Button>\r\n\r\n\r\n    </View>\r\n\r\n   \r\n  )\r\n};\r\nexport default LoginScreen;"]},"metadata":{},"sourceType":"module"}